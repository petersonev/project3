; Stack begins at the very top of memory
.NAME	StkTop=8192
;  Number of sorting iterations
.NAME	ItNum=300
; The array starts at data address 0x100 and has 1024 elements (4kB)
.NAME	Array=0x100
.NAME	ArrayBytes=4096
; Addresses for I/O
.NAME   IOBASE= 0xF0000000
.NAME	OFSHEX= 0x00000000
.NAME	OFSLEDR=0x00000004
.NAME	OFSLEDG=0x00000008

	;  Now the actual code
	.ORIG 0x40




	; SP Points to the top of the stack
	MVHI	StkTop,SP
	ADDI	StkTop,SP,SP
	; Our GP will point to the beginning of I/O addresses
	MVHI	IOBASE,GP
	; Our S0 will be zero
	ANDI	0,S0,S0
	SW		OFSLEDR(GP),S0	; Turn off LEDR
	SW		OFSLEDG(GP),S0	; Turn off LEDG

	; Initialize the array
	ADDI 	Array,S0,T0			; T0 is CurPtr, set to start of array
	ADDI	ArrayBytes,T0,T1	; T1 is EndPtr, set to end of array
	; Array elements will be 9, 22, 35, etc.
	ADDI	9,S0,S1				; S1 is the current value of the array element for initialization
Init:
	SW		0(T0),S1		; Store value into an element
	ADDI	13,S1,S1		; Add 13 to the value for next element
	ADDI	4,T0,T0			; Move to next element
	BNE		Init,T0,T1		; if(CurPtr!=EndPtr) goto Init;
	CALL	ChkAsc(S0)		; Call ChkAsc

	ADDI	ItNum,S0,S1		; We will keep the iteration count in S1
	SW		OFSHEX(GP),S1	; Display loop counter
.word 0xdead

	; Verifies that the array is sorted in ascending order
ChkAsc:
	ADDI	Array,S0,A0
	ADDI	ArrayBytes,A0,A1
	; Array elements should be 9,22,35,etc.
	ADDI	9,S0,A2
LoopChkAsc:
	LW		0(A0),T0
	BEQ		GoodChkAsc,T0,A2
ErrChkAsc:
	SW		OFSHEX(GP),t0	; Put value we read on HEX
	ADDI	0x3E0,S0,T1
	SW		OFSLEDR(GP),T1	; Turn on upper half of LEDR
	BT 		ErrChkAsc,T0,T0	; Loop forever
GoodChkAsc:
	ADDI	13,A2,a2
	ADDI	4,A0,A0
	BNE		LoopChkAsc,A0,A1
	RET

